image: nhsbsa/docker-centos-iac:latest

stages:
  - build
  - test-deploy
  - test
  - deploy

before_script:
  - export JAVA_HOME=$(dirname $(dirname $(readlink -f $(which javac))))
  - export JRE_HOME=$(dirname $(dirname $(readlink -f $(which javac))))/jre
  - printenv | sort
  - git clone git@${CI_GIT_HOST}:devops/bsa-ci.git
  - (cd bsa-ci && bundle install)

# feature job
# for every feature* branch:
# perform maven install to perform compile, test and code quality checks
feature-build:
  stage: build
  only:
    - /^feature.*$/
  script:
    # mvn to compile, test and qa changes
    - mvn -B -Psonar clean install sonar:sonar
    - bsa-ci/sonarqube_job_status.rb

# develop job
# for every merge to master:
# - updates the POM version to major.minor.git-hash
# - commits to a new branch named after POM version
master-creates-release-candidate:
  stage: build
  only:
    - master
  script:
    - bsa-ci/create_release_candidate.rb --verbose

# release job
# for every release* branch:
# perform maven install and deploy:deploy
rc-binary-deploy:
  stage: build
  only:
    - /^rc.*$/
  script:
    # mvn install to compile, test and qa changes
    # then deploy:deploy to push artifacts up to binary repo
    - mvn -B -DrepoUrl=$REPO_URL clean install deploy:deploy

rc-iac-deploy-local:
  stage: test-deploy
  only:
    - /^rc.*$/
  script:
    # clone iac
    - git clone git@${CI_GIT_HOST}:devops/iac-control.git

    # update the lis-alpha-rules_artifacts.yml
    - cp lis-alpha-rules-iac/lis-alpha-rules_artifacts.yml iac-control/ansible/vars/lis-alpha-rules_artifacts.yml

    # run the iac-control terraform
    - ( cd iac-control && bin/iac_bootstrap.rb --verbose )

rc-zap-test:
  stage: test
  only:
    - /^rc.*$/
  services:
    - nhsbsa/owasp-zap:latest
  script:
    # clone iac
    - git clone git@${CI_GIT_HOST}:devops/iac-control.git
    - eval $(cd iac-control && bin/generate_tfvars.rb)
    - baseUrl="http://env${subnet}-lis-alpha-rules00.node.consul:8080/lis-alpha-rules-ws"
    #- curl http://env${subnet}-lis-alpha-rules00.node.consul:8080
    # mvn install to compile, test and qa changes
    - >
      mvn -B -Pzap -DzapPort=$NHSBSA__OWASP_ZAP_PORT_8080_TCP_PORT -DzapHost=$NHSBSA__OWASP_ZAP_PORT_8080_TCP_ADDR
      -DzapTargetUrl=$baseUrl
      -DsonarUrl=$SONAR_URL  -Dsonar.branch=release
      install br.com.softplan.security.zap:zap-maven-plugin:analyze sonar:sonar
    - bsa-ci/ci-sonar.sh

rc-acceptance-test:
  stage: test
  only:
    - /^rc.*$/
  script:
    # iac to get environment subnet
    - git clone git@${CI_GIT_HOST}:devops/iac-control.git
    - eval $(cd iac-control && bin/generate_tfvars.rb)
    # get base url
    - baseUrl="http://env${subnet}-lis-alpha-rules00.node.consul:8080/lis-alpha-rules-ws"
    # hw-acceptance-test does the hard work of testing
    - git clone git@${CI_GIT_HOST}:lis/lis-alpha-rules-acceptance-test.git
    - (cd lis-alpha-rules-acceptance-test && cucumber testurl=$baseUrl lis-alpha-rules.feature )

rc-capacity-test:
  stage: test
  only:
    - /^rc.*$/
  script:
    - echo TODO

rc-iac-deploy:
  stage: deploy
  only:
    - /^rc.*$/
  script:
    # general git config
    - bsa-ci/ci-git.sh init

    # clone iac
    - git clone git@${CI_GIT_HOST}:devops/iac-control.git

    # update the lis-alpha-rules_artifacts.yml
    - cp lis-alpha-rules-iac/hlis-alpha-rules_artifacts.yml iac-control/ansible/vars/lis-alpha-rules_artifacts.yml

    # commit new artifacts yml into iac-control
    - POM_VERSION=$(bsa-ci/ci-mvn-version.sh get)
    - ( cd iac-control ../bsa-ci/ci-git.sh to-ssh )
    - ( cd iac-control && git checkout -b "feature/lis-alpha-rules-$POM_VERSION" && git add ansible/vars/lis-alpha-rules_artifacts.yml && git commit -m "feature/lis-alpha-rules-$POM_VERSION" )
    - ( cd iac-control && git push --set-upstream origin feature/lis-alpha-rules-${POM_VERSION} )
