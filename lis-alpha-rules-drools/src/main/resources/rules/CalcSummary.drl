package uk.nhs.nhsbsa.lis.rules.v1.droolsengine.assessment;
 
import uk.nhs.nhsbsa.util.ObjectIndex;
import uk.nhs.nhsbsa.lis.rules.v1.model.*;
import uk.nhs.nhsbsa.lis.rules.v1.droolsengine.model.*;

global org.slf4j.Logger logger
global uk.nhs.nhsbsa.lis.rules.v1.droolsengine.service.IAssessmentFactoryService factory
global uk.nhs.nhsbsa.lis.rules.v1.droolsengine.service.IRequireService requireService

rule "Accumulate Resources"
no-loop true
salience -10
when 
	$summary : AssessmentSummary ( resources == null )
	accumulate ( IMoneySource ( moneySourceType() == IMoneySource.Type.RESOURCE, receiving == true, value.canConvert(), $value : value.convert(Interval.WEEKLY).value );
		$sum : sum ( $value )
	)
then
	IntervalValue total = new IntervalValue(Interval.WEEKLY, $sum);
	logger.info("accumulate resources: {}", total);
	modify ( $summary ) { addResources(total) };
end

rule "Accumulate Requirements"
no-loop true
salience -10
when 
	$summary : AssessmentSummary ( requirements == null )
	accumulate ( IMoneySource ( moneySourceType() == IMoneySource.Type.REQUIREMENT, receiving == true, value.canConvert(), $value : value.convert(Interval.WEEKLY).value );
		$sum : sum ( $value )
	)
then
	IntervalValue total = new IntervalValue(Interval.WEEKLY, $sum);
	logger.info("accumulate requirements: {}", total);
	modify ( $summary ) { addRequirements(total) };
end
