package uk.nhs.nhsbsa.lis.rules.v1.droolsengine.assessment;
 
import uk.nhs.nhsbsa.util.ObjectIndex;
import uk.nhs.nhsbsa.lis.rules.v1.model.*;
import uk.nhs.nhsbsa.lis.rules.v1.droolsengine.model.*;

global org.slf4j.Logger logger
global uk.nhs.nhsbsa.lis.rules.v1.droolsengine.service.IAssessmentFactoryService factory
global uk.nhs.nhsbsa.lis.rules.v1.droolsengine.service.IRequireService requireService

rule "State Pension Rule"
when 
        lisApplication : LisApplication( applicant != null, myApplicant : applicant )
        $breakdown : AssessmentBreakdown()
    then
        logger.info("State Pension Rule");
        
        List<String> statePension = HelperFunctions.statePensionBenefit(myApplicant);
        HelperFunctions.sumIncomeList($breakdown,statePension,"State Pension","Applicant");
end 

//rule "accumulate benefits"
//salience -10
//when 
//	$summary : AssessmentSummary ()
//	accumulate ( Benefit ( receiving == true, value.canConvert(), $value : value.convert(Interval.WEEKLY).value );
//		$sum : sum ( $value )
//	)
//then
//	IntervalValue total = new IntervalValue(Interval.WEEKLY, $sum);
//	logger.info("accumulate benefits: {}", total);
//	modify ( $summary ) { addResources(total) };
//end
