package uk.nhs.nhsbsa.lis.rules.v1.droolsengine.assessment;
 
global org.slf4j.Logger logger
global uk.nhs.nhsbsa.lis.rules.v1.droolsengine.service.IAssessmentFactoryService factory
global uk.nhs.nhsbsa.lis.rules.v1.droolsengine.service.IRequireService requireService

// Benefit Rules
rule "Default State Pension"
    when 
    	$index : ObjectIndex ()
        $person : Person ( type in ( PersonType.MAIN_APPLICANT, PersonType.PARTNER ) )
        exists $pensioner : IsPensioner ( person == $person )
        not Benefit( owner == $person, type == BenefitType.RETIREMENT_PENSION )
    then
        logger.info("Default State Pension");
        Benefit $benefit = factory.defaultBenefit(BenefitType.RETIREMENT_PENSION);
        $person.addBenefit($benefit);
        $index.reindex($person);
        insert ($benefit);
end

rule "Enable State Pension"
    when 
    	$assessment : Assessment ()
    	$index : ObjectIndex ()
        $person : Person ( type in ( PersonType.MAIN_APPLICANT, PersonType.PARTNER ) )
        $benefit : Benefit( owner == $person, type == BenefitType.RETIREMENT_PENSION )
        $isPensioner : IsPensioner ( person == $person )
    then
        logger.info("Enable State Pension");
        requireService.enable($assessment, $index, $benefit);
end

rule "Disable State Pension"
    when 
    	$assessment : Assessment ()
    	$index : ObjectIndex ()
        $person : Person ( type in ( PersonType.MAIN_APPLICANT, PersonType.PARTNER ) )
        $benefit : Benefit( owner == $person, type == BenefitType.RETIREMENT_PENSION )
        not IsPensioner ( person == $person )
    then
        logger.info("Disable State Pension");
        requireService.disable($assessment, $index, $benefit);
end



