package uk.nhs.nhsbsa.lis.rules.v1.droolsengine.assessment;
 
import uk.nhs.nhsbsa.lis.rules.v1.model.LisApplication;
import uk.nhs.nhsbsa.lis.rules.v1.model.AssessmentBreakdown;
import uk.nhs.nhsbsa.lis.rules.v1.model.*;
import uk.nhs.nhsbsa.lis.rules.v1.droolsengine.HelperFunctions;
import java.time.LocalDateTime;
import java.time.LocalDate;
import java.util.List;


// Not much of a rule to sum the values
rule "Total Outgoings"
	salience 40
when 
		lisApplication : LisApplication( applicant != null, myApplicant : applicant )
		$breakdown : AssessmentBreakdown($breakdown!=null)
	then
		HelperFunctions.logRule($breakdown,"Total Outgoings");
		$breakdown.setRunningPremiums(0.0);
		$breakdown.setTotalHousing(0.0);
		$breakdown.setRunningIncome(0.0);
		HelperFunctions.sumPremiums($breakdown);
		HelperFunctions.sumHousingCosts($breakdown);
		HelperFunctions.sumIncomeAndCapital($breakdown);
		HelperFunctions.sumRunningTotal($breakdown);
	end


// Assessment. The rules need to be clarified
rule "HC LIS Assessment"
	salience 20
when
	lisApplication : LisApplication( applicant != null, myApplicant : applicant )
	$breakdown : AssessmentBreakdown($breakdown!=null, hasPremiums() )
	
then
	HelperFunctions.logRule($breakdown,"HC LIS Assessment");
	Double lowerLimit=$breakdown.getPrescriptionPrice()/2;
	Double upperLimit=($breakdown.getPrescriptionPrice()/2)-$breakdown.getUpperLimitHC3Amount();
	if($breakdown.getRunningTotal() >= lowerLimit){
		// HC2
		HelperFunctions.logRule($breakdown,"HC2");
	}
	else if($breakdown.getRunningTotal() < lowerLimit
			&& 
			$breakdown.getRunningTotal() >= upperLimit){
		// HC3
		HelperFunctions.logRule($breakdown,"HC3");
	}
	else{
		// HC5
		HelperFunctions.logRule($breakdown,"HC5");
	}
	 
end


	