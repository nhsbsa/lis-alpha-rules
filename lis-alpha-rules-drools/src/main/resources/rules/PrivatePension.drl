package uk.nhs.nhsbsa.lis.rules.v1.droolsengine.assessment;
 
global org.slf4j.Logger logger
global uk.nhs.nhsbsa.lis.rules.v1.droolsengine.service.IAssessmentFactoryService factory
global uk.nhs.nhsbsa.lis.rules.v1.droolsengine.service.IRequireService requireService

rule "Default Private Pension"
    when 
    	$index : ObjectIndex ()
        $person : Person ( type in ( PersonType.MAIN_APPLICANT, PersonType.PARTNER ) )
        exists ConsiderPerson( person == $person )
        not Income( owner == $person, type == IncomeType.OCC_PENSION )
    then
        Income $income = factory.defaultIncome(IncomeType.OCC_PENSION);
        $person.addIncome($income);
        $index.reindex($person);
        insert ($income);
end

rule "Private Pension Resources"
when 
    $breakdown : Breakdown()
	$person : Person()
	exists ConsiderPerson( person == $person )
	not IncomeCapital( type == IncomeType.OCC_PENSION.name(), paidTo == $person.name.toString() )
	accumulate ( Income ( 
			type == IncomeType.OCC_PENSION,
			receiving == true, value.canConvert(),
			owner == $person,
			$value : value.convert(Interval.WEEKLY).value );
		$sum : sum ( $value )
	)
then
	IntervalValue total = new IntervalValue(Interval.WEEKLY, $sum);
	IncomeCapital requirement = new IncomeCapital(IncomeType.OCC_PENSION.name(), 
		$person.toString(), 
		total.getValue(), 
		null, null, null);
    $breakdown.addIncomeCapital(requirement);
	insert ( requirement );
end

