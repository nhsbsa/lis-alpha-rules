package uk.nhs.nhsbsa.lis.rules.v1.droolsengine.assessment;

global org.slf4j.Logger logger
global uk.nhs.nhsbsa.lis.rules.v1.droolsengine.service.IAssessmentFactoryService factory
global uk.nhs.nhsbsa.lis.rules.v1.droolsengine.service.IRequireService requireService

rule "Default Council Tax"
salience 100
    when 
        $index : ObjectIndex ()
        $person : Person ( type in ( PersonType.MAIN_APPLICANT, PersonType.PARTNER ) )
        exists ConsiderPerson( person == $person )
        not Outgoing( owner == $person, type == OutgoingType.COUNCIL_TAX )
    then
        Outgoing $outgoing = factory.defaultOutgoing(OutgoingType.COUNCIL_TAX);
        $person.addOutgoing($outgoing);
        $index.reindex($person);
        insert ($outgoing);
end

rule "Council Tax Requirements"
when 
	not CouncilTax( )
    $breakdown : Breakdown()
	accumulate ( Outgoing ( 
			type == OutgoingType.COUNCIL_TAX,
			receiving == true, value.canConvert(),
			$value : value.convert(Interval.WEEKLY).value );
		$sum : sum ( $value )
	)
then
	IntervalValue total = new IntervalValue(Interval.WEEKLY, $sum);
	CouncilTax resource = new CouncilTax(total);
    $breakdown.setCouncilTax(resource);
	insert ( resource );
end